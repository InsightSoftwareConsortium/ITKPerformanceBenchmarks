cmake_minimum_required(VERSION 3.4)
project(ITKBenchmarks)

set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/CMake ${CMAKE_MODULE_PATH})

if (NOT DEFINED ITKBenchmarks_SUPERBUILD)
  option(ITKBenchmarks_SUPERBUILD "Build ITK and the PerformanceBenchmarks module prior to building the benchmarks." ON)
endif()


if(ITKBenchmarks_SUPERBUILD AND NOT ITK_DIR)
  # External Project Build of ITK
  include(ExternalProject)
  set(ITKBenchmarks_EXECUTABLE_OUTPUT_PATH  "${CMAKE_BINARY_DIR}/bin")

  if(NOT ITK_DIR)
    set(ITK_SOURCE_DIR ${CMAKE_BINARY_DIR}/ITK-src)
    set(ITK_BUILD_DIR ${CMAKE_BINARY_DIR}/ITK-build CACHE INTERNAL "Path to store itk binaries")
    set(ITK_INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/ITK-install CACHE INTERNAL "Path to store itk install")

    ExternalProject_Add(ITK
      GIT_REPOSITORY "https://itk.org/ITK.git"
      GIT_TAG v4.10.0
      UPDATE_COMMAND ""
      DOWNLOAD_DIR ${ITK_SOURCE_DIR}
      SOURCE_DIR ${ITK_SOURCE_DIR}
      BINARY_DIR ${ITK_BUILD_DIR}
      INSTALL_DIR ${ITK_INSTALL_DIR}
      CMAKE_GENERATOR ${CMAKE_GENERATOR}
      CMAKE_ARGS
        -DCMAKE_RUNTIME_OUTPUT_DIRECTORY:STRING=${ITKBenchmarks_EXECUTABLE_OUTPUT_PATH}
        -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
        -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}
        -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
        -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}
        -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
        -DBUILD_TESTING:BOOL=OFF
        -DBUILD_EXAMPLES:BOOL=OFF
        -DITK_USE_BRAINWEB_DATA:BOOL=ON
      INSTALL_COMMAND ""
      )
    set(ITK_DIR ${ITK_BUILD_DIR})

    set(PerformanceBenchmarks_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../" CACHE INTERNAL "Path to PerformanceBenchmarks")

    ExternalProject_Add(PerformanceBenchmarksModule
      UPDATE_COMMAND ""
      DOWNLOAD_COMMAND ""
      SOURCE_DIR "${PerformanceBenchmarks_SOURCE_DIR}"
      BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/PerformanceBenchmarksModule-build"
      CMAKE_GENERATOR ${CMAKE_GENERATOR}
      CMAKE_ARGS
        -DCMAKE_RUNTIME_OUTPUT_DIRECTORY:STRING=${ITKBenchmarks_EXECUTABLE_OUTPUT_PATH}
        -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
        -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}
        -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
        -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}
        -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
        -DITK_DIR:PATH=${ITK_DIR}
      INSTALL_COMMAND ""
      DEPENDS ITK
      )
  endif()

  ExternalProject_Add(ITKBenchmarks
    UPDATE_COMMAND ""
    DOWNLOAD_COMMAND ""
    SOURCE_DIR "${PerformanceBenchmarks_SOURCE_DIR}/examples"
    BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/ITKBenchmarks-build"
    CMAKE_GENERATOR ${CMAKE_GENERATOR}
    CMAKE_ARGS
      -DCMAKE_RUNTIME_OUTPUT_DIRECTORY:STRING=${ITKBenchmarks_EXECUTABLE_OUTPUT_PATH}
      -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
      -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}
      -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
      -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}
      -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
      -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
      -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
      -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
      -DITK_DIR:PATH=${ITK_DIR}
      -DITKBenchmarks_SUPERBUILD:BOOL=OFF
    INSTALL_COMMAND ""
    DEPENDS PerformanceBenchmarksModule
    )
  return()
endif()

include(ITKBenchmarksExternalData)
ExternalData_Expand_Arguments(ITKBenchmarksData
  BRAIN_IMAGE
  "DATA{Data/Input/brainweb165a10f17.mha}"
  )
set(TEST_OUTPUT_DIR "${PROJECT_BINARY_DIR}/Testing")

enable_testing()

option(BENCHMARK_ITK_FILTERING "Test the performance of ITK Filters." ON)
if(BENCHMARK_ITK_FILTERING)
  add_subdirectory(Filtering)
endif()

option(BENCHMARK_ITK_REGISTRATION "Test the performance of ITK Registration." ON)
if(BENCHMARK_ITK_REGISTRATION)
  add_subdirectory(Registration)
endif()

option(BENCHMARK_ITK_SEGMENTATION "Test the performance of ITK Segmentation." ON)
if(BENCHMARK_ITK_SEGMENTATION)
  add_subdirectory(Segmentation)
endif()

ExternalData_Add_Target(ITKBenchmarksData)

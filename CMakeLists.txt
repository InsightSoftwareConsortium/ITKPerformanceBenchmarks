cmake_minimum_required(VERSION 2.8)

project(PerformanceBenchmarks)

option(PerformanceBenchmarks_SUPERBUILD "" ON)

#message("ITK_DIR ::"  ${ITK_DIR})

set(ITK_DIR ${ITK_DIR})


if (PerformanceBenchmarks_SUPERBUILD)
  # External Project Build of ITK
  include(ExternalProject)

  if( NOT ITK_DIR)

    set( ITK_SOURCE_DIR ${CMAKE_BINARY_DIR}/ITK-src )
    set( ITK_BUILD_DIR ${CMAKE_BINARY_DIR}/ITK-build CACHE INTERNAL "Path to store itk binaries")

    ExternalProject_Add(ITK
      GIT_REPOSITORY "git://itk.org/ITK.git"
      GIT_TAG b755a25a2fec5ced65ab0a8ca8c2276bba402f67
      UPDATE_COMMAND ""
      DOWNLOAD_DIR ${ITK_SOURCE_DIR}
      SOURCE_DIR ${ITK_SOURCE_DIR}
      BINARY_DIR ${ITK_BUILD_DIR}
      INSTALL_DIR ${ITK_BUILD_DIR}
      CMAKE_GENERATOR ${gen}
      CMAKE_ARGS
        -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
        -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}
        -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
        -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}
        -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
        -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
        -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
        -DBUILD_TESTING:BOOL=OFF
        -DBUILD_EXAMPLES:BOOL=OFF
        -DITK_USE_BRAINWEB_DATA:BOOL=ON
      INSTALL_COMMAND ""
      )

    set(ITK_DIR ${ITK_BUILD_DIR})
  endif()

  ExternalProject_Add(PerformanceBenchmarks
    UPDATE_COMMAND ""
    DOWNLOAD_COMMAND ""
    SOURCE_DIR ${CMAKE_SOURCE_DIR}
    BINARY_DIR ${CMAKE_BINARY_DIR}
    CMAKE_GENERATOR ${gen}
    CMAKE_ARGS
      -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
      -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}
      -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
      -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}
      -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
      -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
      -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
      -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
      -DITK_DIR:PATH=${ITK_DIR}
      -DPerformanceBenchmarks_SUPERBUILD:BOOL=OFF
    INSTALL_COMMAND ""
    )

#    ExternalProject_Add(ITK_BENCHMARK
#    UPDATE_COMMAND ""
#    DOWNLOAD_COMMAND ""
#    SOURCE_DIR "${CMAKE_SOURCE_DIR}/examples/"
#    BINARY_DIR "${CMAKE_BINARY_DIR}/examples/"
#    CMAKE_GENERATOR ${gen}
#    CMAKE_ARGS
#      -DCMAKE_CXX_COMPILER:STRING=${CMAKE_CXX_COMPILER}
#      -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}
#      -DCMAKE_C_COMPILER:STRING=${CMAKE_C_COMPILER}
#      -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}
#      -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
#      -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}
#      -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
#      -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
#      -DITK_DIR:PATH=${ITK_DIR}
#    INSTALL_COMMAND ""
#    DEPENDS PerformanceBenchmarks
#    )

    #/ITKPerformanceBenchmarks/examples/Filtering/FFTDirectInverse.cxx:40: error:
    #'itkHighPriorityRealTimeProbesCollector.h' file not found

    return()
endif()

set(PerformanceBenchmarks_LIBRARIES PerformanceBenchmarks)

if(NOT ITK_SOURCE_DIR)
  find_package(ITK REQUIRED)
  list(APPEND CMAKE_MODULE_PATH ${ITK_CMAKE_DIR})
  include(ITKModuleExternal)
else()
  itk_module_impl()
endif()

add_subdirectory(examples)

